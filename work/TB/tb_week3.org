#+TITLE: TB 共学计划第三周
#+AUTHOR: 胡琛

* 期货基础
 
  1. 交易所

  2. 交易品种
   
  3. 与股票区别

* 000 和 888

  1. 000 -- 商品指数

     - 权重 = 持仓量/总合约持仓量

     - 000对应的价格 = Sum(各合约价格x权重)

     - 一般用于交易分析

     - 并不完全代表主力合约走势，可能出现问题

  2. 888 -- 主力连续
     
     - 一直映射当前主力合约，如果主力合约发生发生换月，888会按照一定规则，自动切换为主力合约

     - 换月时可能发生跳空，程序化的时候需要考虑如何处理这种情况
* TBL的三种数据
 
  1. Numeric -- 作图
     
     #+BEGIN_EXAMPLE
       Numeric PlotNumeric(String Name,Numeric Number,Numeric Locator=0,Integer Color=-1,Integer BarsBack=0)
     #+END_EXAMPLE

     - =Name= 输出值的名称，不区分大小写；
     - =Number= 输出的数值；
     - =Locator= 输出值的定位点，默认时输出单点，否则输出连接两个值线段，用法请看例3；
     - =Color= 输出值的显示颜色，默认表示使用属性设置框中的颜色；
     - =BarsBack= 从当前Bar向前回溯的Bar数，默认值为当前Bar。 

       #+BEGIN_EXAMPLE
         PlotNumeric("收盘价与3370连线", Close, 3370);
       #+END_EXAMPLE

       设置了公式连线为柱状线

  2. String -- 作图

     #+BEGIN_EXAMPLE
       String PlotString(String Name,String str,Numeric Locator=0,Integer Color=-1,Integer BarsBack=0)
     #+END_EXAMPLE

     - =Name= 输出值的名称，不区分大小写；
     - =str= 输出的字符串；
     - =Locator= 输出值的定位点；
     - =Color= 输出值的显示颜色，默认表示使用属性设置框中的颜色；
     - =BarsBack= 从当前Bar向前回溯的Bar数，默认值为当前Bar。

  3. Bool -- 作图

     #+BEGIN_EXAMPLE
       Bool PlotBool(String Name,Bool bPlot,Numeric Locator=0,Integer Color=-1,Integer BarsBack=0)
     #+END_EXAMPLE

     - =Name= 输出值的名称，不区分大小写；
     - =bPlot= 输出的布尔值；
     - =Locator= 输出值的定位点；
     - =Color= 输出值的显示颜色，默认表示使用属性设置框中的颜色
     - =BarsBack= 从当前Bar向前回溯的Bar数，默认值为当前Bar。
     
     #+BEGIN_EXAMPLE
       PlotBool ("con",con,high); //在bar的最高价位置输出条件con的布尔值。
       If (PlotBool ("con1",con1)) Alert("con1 is true"); //输出con1的值，并且当con1条件满足时，进行报警。 
     #+END_EXAMPLE
* If Else分支语句与循环语句
* 用户函数编写
  1. 举例：计算10周期收盘价的平均值

     - 新建一个新的函数，函数名可以设为 =func_test=

     #+BEGIN_EXAMPLE
       Params
         NumericSeries Price(0);
         Numeric length(10);

       Vars
         Numeric Sum(0);
         Numeric i(0);

       Begin
         For i = 0 To length-1
         {
           sum = sum + Price[i];
         }

         Return sum/length;
       End
     #+END_EXAMPLE

     编译成功后，在公式应用中直接调用函数即可
     #+BEGIN_EXAMPLE
       Commentary("Avg Close:"+Text(func_test(Close, 10)));
     #+END_EXAMPLE

  2. 关于 'NumericRef' 的使用
     
     - 如果在函数中希望能返回多个参数，可以使用 'NumricRef'

     - 譬如，上例中，不仅希望返回平均值，还希望返回收盘价之和，可以对函数进行修改
       
       #+BEGIN_EXAMPLE
         Params
                  NumericSeries Price(0);
                  Numeric length(10);
                  NumericRef Sumat; // 注意，引用型参数，不能赋初值

                Vars
                  Numeric Sum(0);
                  Numeric i(0);

                Begin
                  For i = 0 To length-1
                  {
                    sum = sum + Price[i];
                  }
                  Summat = sum;

                  Return sum/length;
                End
       #+END_EXAMPLE

     - 相应的，公式调用函数方法

       #+BEGIN_EXAMPLE
         Vars 
           Numeric Sum(0);

         Begin
           Commentary("Avg Close: "+Text(func_test(Close, 10, Sum);
           Commentary("Sum: " + Text(Sum));
         End
       #+END_EXAMPLE

* 全局变量
  
     - 简单变量
       
       仅在当根 Bar 上有效

     - 序列变量

       值可以传递，如果当根 Bar 没有做运算，值会从上根 Bar 上传下来，每根 Bar 上都有值，这些 Bar 的值集合作为一个变量
       称为序列变量
       
     - 数组变量

       在每根 Bar 上都有很多值，用下标取值

     - 全局变量

       独立于 K 线之外的变量，仅有一个值

     - 注意数组变量于序列变量的区别

     - e.g.

       #+BEGIN_EXAMPLE
         Params
           Numeric a;
           NumericSeries b;
           NumericArray arr;

         Begin
           If(BarStatus == 0)
           {
             a = 1;
             b = 1;
             arr[1] = 2;
             arr[2] = 3;
             SetGlobalVar(0, a); // 全局变量一共可以设置255个，这里设置第一个全局变量值为 a
           }
           Commentary("a = " + Text(a));
           Commentary("b = " + Text(b));
           Commentary("arr[1] = " + Text(arr[1]));
           Commentary("arr[2] = " + Text(arr[2]));
           Commentary("globalVar 0 = " + Text(GetGlobalVar(0))); // 获取第一个全局变量值
         End
       #+END_EXAMPLE

